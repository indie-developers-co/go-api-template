image: golang:1.20

stages:
  - test
  - deploy

test:
  stage: test
  before_script:
    - apt update
    - apt-get install bc -y
    - mkdir -p .go
    - export GOPATH="$CI_PROJECT_DIR/.go"
    - export PATH="$PATH:$GOPATH/bin"
  script:
    - make dep
    - make lint
    - make test_coverage
    - make race
    - make xml
  cache:
    paths:
      - .go/
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
    expire_in: 5 minutes
  rules:
    - if: $CI_COMMIT_TITLE =~ /-draft$/
      when: never
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

deploy_staging:
  image: alpine:latest
  stage: deploy
  script:
    - echo "Deploying to staging server using Render Hook"
    - apk --no-cache add curl
    - curl https://api.render.com/deploy/$RENDER_SERVER_ID?key=$RENDER_SERVER_KEY
  environment:
    name: staging
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

deploy_prod:
  image: alpine:latest
  stage: deploy
  script:
    - echo "Deploying to production server using Render Hook"
    - apk --no-cache add curl
    - curl https://api.render.com/deploy/$RENDER_SERVER_ID?key=$RENDER_SERVER_KEY
  environment:
    name: production
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: manual
